<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>XmppConnection Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="d23516f2-7cdc-fc98-6900-1aae2abbfe49" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:agsXMPP.XmppConnection" /><MSHelp:Keyword Index="A" Term="T:agsXMPP.XmppConnection" /><MSHelp:Keyword Index="A" Term="frlrfagsXMPPXmppConnectionClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfagsXMPPXmppConnectionMembersTopic" /><MSHelp:Keyword Index="K" Term="XmppConnection class" /><MSHelp:Keyword Index="K" Term="agsXMPP.XmppConnection class" /><MSHelp:Keyword Index="F" Term="XmppConnection" /><MSHelp:Keyword Index="F" Term="agsXMPP.XmppConnection" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="agsXMPP.dll" /><MSHelp:Attr Name="APIName" Value=".XmppConnection" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="abstract base class XmppConnection." /></xml></head><body><script type="text/javascript">var store = new CookieDataStore('docs');registerEventHandler(window, 'load', function() { var ss = new SplitScreen('control', 'main'); selectLanguage(store.get('lang')); });</script><div id="control"><span class="productTitle">agsXMPP SDK</span><br /><span class="topicTitle">XmppConnection Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="c5198fb4-6a5b-4460-9c62-294b68bb7ee4.htm">agsXMPP</a> ► <span class="selflink">XmppConnection</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span><script>var sd = getStyleDictionary(); var lfc = new LanguageFilterController();</script></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
            abstract base class XmppConnection.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="st.toggleClass('x-lang','CSharp','activeTab','tab'); sb.toggleStyle('x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="st.toggleClass('x-lang','VisualBasic','activeTab','tab'); sb.toggleStyle('x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="st.toggleClass('x-lang','ManagedCPlusPlus','activeTab','tab'); sb.toggleStyle('x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">XmppConnection</span></pre></div><div class="code" x-lang="VisualBasic"><pre><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">XmppConnection</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">XmppConnection</span> <span class="keyword">abstract</span></pre></div></div><script type="text/javascript">
						var st = new ElementCollection('syntaxTabs');
						var sb = new ElementCollection('syntaxBlocks');
						lfc.registerTabbedArea(st, sb);
						st.toggleClass('x-lang','CSharp','activeTab','tab');
						sb.toggleStyle('x-lang','CSharp','display','block','none');
					</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="mt.toggleClass('value','all','activeTab','tab'); mf.subgroup='all'; ms.process(getInstanceDelegate(mf,'filterElement'));">All Members</td><td class="tab" value="constructor" onclick="mt.toggleClass('value','constructor','activeTab','tab'); mf.subgroup='constructor'; ms.process(getInstanceDelegate(mf,'filterElement'));">Constructors</td><td class="tab" value="method" onclick="mt.toggleClass('value','method','activeTab','tab'); mf.subgroup='method'; ms.process(getInstanceDelegate(mf,'filterElement'));">Methods</td><td class="tab" value="property" onclick="mt.toggleClass('value','property','activeTab','tab'); mf.subgroup='property'; ms.process(getInstanceDelegate(mf,'filterElement'));">Properties</td><td class="tab" value="event" onclick="mt.toggleClass('value','event','activeTab','tab'); mf.subgroup='event'; ms.process(getInstanceDelegate(mf,'filterElement'));">Events</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="mf['public'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="mf['protected'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="mf['instance'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="mf['static'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="mf['declared'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="mf['inherited'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ad78943b-43b5-76da-301e-c9d695459a2a.htm">XmppConnection<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5fa2f1ff-ec4c-9cfb-7d20-ac57b96a99d6.htm">XmppConnection(SocketConnectionType)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="e6de5d3a-1efd-1125-f9a0-1eebd875e9d5.htm">AutoResolveConnectServer</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="989c132b-d1ea-e04b-32a4-f332bef87b13.htm">ClientSocket</a></td><td><div class="summary">
            Read Online Property ClientSocket
            returns the SOcket object used for this connection
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4bcd103c-d481-827b-84b5-da9b79e25387.htm">Close<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Send the end of stream
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="30755b4a-e0c8-35e2-d8e8-13f44b28cdc0.htm">ConnectServer</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="a94e22b2-6a20-0ccf-ed02-1c18f6173861.htm">CreateKeepAliveTimer<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="c458a3f7-c05e-62bb-dbfe-eb9700c0110a.htm">DestroyKeepAliveTimer<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Allows an <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> to attempt to free resources and perform other cleanup operations before the <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="93b8f32e-ce35-1333-217e-d89fbe50097a.htm">FireOnError(Object, Exception)</a></td><td><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="9d99b270-cf6e-c79e-3c35-28b0136f8d3c.htm">FireOnReadXml(Object, String)</a></td><td><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="35756cee-6572-d0bb-d48f-1a6c11067748.htm">FireOnWriteXml(Object, String)</a></td><td><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. <a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a> is suitable for use in hashing algorithms and data structures like a hash table.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="780af4ba-eb6b-dc22-ca3a-f1681c783a46.htm">KeepAlive</a></td><td><div class="summary">
            Send Keep Alives (for NAT)
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="452d0d83-e276-af2b-0f4a-8384aaa833a5.htm">KeepAliveInterval</a></td><td><div class="summary">
        <p>
            the keep alive interval in seconds.
            Default value is 120
            </p>
        <p>
            Keep alive packets prevent disconenct on NAT and broadband connections which often
            disconnect if they are idle.
            </p>
      </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="75d9898e-77bc-c4d4-870b-b4cef5a629b4.htm">OnError</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="429f4690-eb77-3042-c0fd-ca98d5e40ddc.htm">OnReadSocketData</a></td><td><div class="summary">
            Data received from the Socket
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="32a1aca5-94e9-07dd-e9ae-8f1d95c16819.htm">OnReadXml</a></td><td><div class="summary">
            a XML packet or text is received. 
            This are no winsock events. The Events get generated from the XML parser
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="dbcfc3e0-b276-3d5c-ee82-847075c0c039.htm">OnWriteSocketData</a></td><td><div class="summary">
            Data was sent to the socket for sending
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="ab1f7abf-cfd6-fb6e-95b3-c6a3c8773025.htm">OnWriteXml</a></td><td><div class="summary">
            XML or Text is written to the Socket this includes also the keep alive packages (a single space)		
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="943f7c2b-4442-8ea4-dceb-1a6a6c3a10fd.htm">OnXmppConnectionStateChanged</a></td><td><div class="summary">
            This event just informs about the current state of the XmppConnection
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bb4ff198-f1be-6dbc-ca4c-dc5954715c08.htm">Open(String)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="9fd25aa8-0deb-0ca9-2e03-5e4bb58932bb.htm">Port</a></td><td><div class="summary">
            The Port of the remote server for the connection
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ca88aca4-2e86-6674-ca76-1cf60c7e44f6.htm">Send(String)</a></td><td><div class="summary">
            Send a xml string over the XmppConnection
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3cd574c9-1bf1-1846-c251-b96b2ebdaed6.htm">Send(Element)</a></td><td><div class="summary">
            Send a xml element over the XmppConnection
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="01fb9c74-a7e2-23d3-9fd3-ae9afc795684.htm">Server</a></td><td><div class="summary">
            domain or ip-address of the remote server for the connection
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0163aeba-fa20-e243-d255-25a77ce07c81.htm">SocketConnect<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Starts connecting of the socket
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fbe6c909-e0aa-d9ba-55d4-605c91090ee5.htm">SocketConnect(String, Int32)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="2a511043-a7bf-acb9-0624-bbbc04c304dc.htm">SocketConnectionType</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="94a5af59-b166-6030-62e9-bc7fed66af2f.htm">SocketDisconnect<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="71e288b6-d0f4-d4fb-4f89-0bc99f2e802d.htm">SocketOnConnect(Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bb4a5be0-f418-905a-b2c6-eb22abc575b3.htm">SocketOnDisconnect(Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6bfef4fb-54c8-a24d-e398-7a3eedc706cd.htm">SocketOnError(Object, Exception)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="067feb93-b1bf-21e7-6708-f292305b64b8.htm">SocketOnReceive(Object, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="b0138efc-a956-861f-00c5-2ef4a5cf31e3.htm">StreamId</a></td><td><div class="summary">
            the id of the current xmpp xml-stream
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="83c45877-5f29-9d2f-d143-132d99fdd5bf.htm">StreamParser</a></td><td><div class="summary">
            the underlaying XMPP StreamParser. Normally you don't need it, but we make it accessible for
            low level access to the stream
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a730503e-5e82-7284-3230-8317705798a1.htm">StreamParserOnError(Object, Exception)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="67394b7b-5c53-c212-9768-c311c8e7b8bf.htm">StreamParserOnStreamElement(Object, Node)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="983fd070-edfb-c0d7-c7d6-a6042dd79356.htm">StreamParserOnStreamEnd(Object, Node)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="abe6bfa0-1e96-8fcb-2e88-c26bc72f0e8c.htm">StreamParserOnStreamError(Object, Exception)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="17df5d95-6ca9-9179-fa96-99e56394f2c5.htm">StreamParserOnStreamStart(Object, Node)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="5b7cb03b-8be2-21d9-020f-172a082cb88d.htm">StreamVersion</a></td><td><div class="summary">
            Set to null for old Jabber Protocol without SASL andstream features
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="765dc231-ea9a-6c3d-c3d2-1e2b552c2e7c.htm">XmppConnectionState</a></td><td><br /></td></tr></table><script type="text/javascript">
					var mt = new ElementCollection('memberTabs');
					var ms = new ElementCollection('memberList');
					var mf = new MemberFilter();
					mt.toggleClass('value','all','activeTab','tab');
				</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="3"><a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td colspan="2"><span class="selflink">XmppConnection</span></td></tr><tr><td> </td><td><img src="../icons/NotLastChild.gif" /></td><td><a href="cf1f3258-8d7a-0a4a-38a7-478ea1858a5e.htm">XmppComponentConnection</a></td></tr><tr><td> </td><td><img src="../icons/LastChild.gif" /></td><td><a href="acd05716-9b77-54c6-9420-e915f25b3b21.htm">XmppClientConnection</a></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:gnauck%40ag-software.de?Subject=agsXMPP SDK">gnauck@ag-software.de</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p /><a href="http://www.ag-software.de">Copyright (c) 2003-2008 by AG-Software</a></div>Assembly: <span data="assembly">agsXMPP</span> (Module: agsXMPP) Version: 1.1.0.0</p></div></body></html>