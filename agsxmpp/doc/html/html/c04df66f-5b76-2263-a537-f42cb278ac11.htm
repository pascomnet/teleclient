<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>MucManager Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="c04df66f-5b76-2263-a537-f42cb278ac11" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:agsXMPP.protocol.x.muc.MucManager" /><MSHelp:Keyword Index="A" Term="T:agsXMPP.protocol.x.muc.MucManager" /><MSHelp:Keyword Index="A" Term="frlrfagsXMPPprotocolxmucMucManagerClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfagsXMPPprotocolxmucMucManagerMembersTopic" /><MSHelp:Keyword Index="K" Term="MucManager class" /><MSHelp:Keyword Index="K" Term="agsXMPP.protocol.x.muc.MucManager class" /><MSHelp:Keyword Index="F" Term="MucManager" /><MSHelp:Keyword Index="F" Term="agsXMPP.protocol.x.muc.MucManager" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="agsXMPP.dll" /><MSHelp:Attr Name="APIName" Value=".MucManager" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="A helper class for Multi User Chat" /></xml></head><body><script type="text/javascript">var store = new CookieDataStore('docs');registerEventHandler(window, 'load', function() { var ss = new SplitScreen('control', 'main'); selectLanguage(store.get('lang')); });</script><div id="control"><span class="productTitle">agsXMPP SDK</span><br /><span class="topicTitle">MucManager Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="093d9ae5-d575-cdfc-6c9e-aadac97f947b.htm">agsXMPP.protocol.x.muc</a> ► <span class="selflink">MucManager</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span><script>var sd = getStyleDictionary(); var lfc = new LanguageFilterController();</script></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
            A helper class for Multi User Chat
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="st.toggleClass('x-lang','CSharp','activeTab','tab'); sb.toggleStyle('x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="st.toggleClass('x-lang','VisualBasic','activeTab','tab'); sb.toggleStyle('x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="st.toggleClass('x-lang','ManagedCPlusPlus','activeTab','tab'); sb.toggleStyle('x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MucManager</span></pre></div><div class="code" x-lang="VisualBasic"><pre><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">MucManager</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">MucManager</span></pre></div></div><script type="text/javascript">
						var st = new ElementCollection('syntaxTabs');
						var sb = new ElementCollection('syntaxBlocks');
						lfc.registerTabbedArea(st, sb);
						st.toggleClass('x-lang','CSharp','activeTab','tab');
						sb.toggleStyle('x-lang','CSharp','display','block','none');
					</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="mt.toggleClass('value','all','activeTab','tab'); mf.subgroup='all'; ms.process(getInstanceDelegate(mf,'filterElement'));">All Members</td><td class="tab" value="constructor" onclick="mt.toggleClass('value','constructor','activeTab','tab'); mf.subgroup='constructor'; ms.process(getInstanceDelegate(mf,'filterElement'));">Constructors</td><td class="tab" value="method" onclick="mt.toggleClass('value','method','activeTab','tab'); mf.subgroup='method'; ms.process(getInstanceDelegate(mf,'filterElement'));">Methods</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="mf['public'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="mf['protected'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="mf['instance'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="mf['static'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="mf['declared'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="mf['inherited'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="73deb2cf-8d15-8aeb-1453-2c74a903efce.htm">MucManager(XmppClientConnection)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a67896fa-8d75-768c-98c7-9ad2c9ee0e0c.htm">AcceptDefaultConfiguration(Jid)</a></td><td><div class="summary">
            create an "instant room". This means you accept the default configuration and dont want to configure the room.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2634297f-821c-30d2-ff78-5a22a9463373.htm">AcceptDefaultConfiguration(Jid, IqCB)</a></td><td><div class="summary">
            create an "instant room". This means you accept the default configuration and dont want to configure the room.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fe18893c-d3b5-80fd-56ff-147a84d66747.htm">AcceptDefaultConfiguration(Jid, IqCB, Object)</a></td><td><div class="summary">
            create an "instant room". This means you accept the default configuration and dont want to configure the room.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d3c834ac-4014-ae21-a888-f39e618c7fb9.htm">BanUser(Jid, Jid)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bb2a1f75-a655-e2c3-8cee-d33c32802ba5.htm">BanUser(Jid, Jid, String)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bbbfbd6a-78a0-0238-3039-3245645890fe.htm">BanUser(Jid, Jid, String, IqCB)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="37219a33-1a0c-9262-f7b1-fd1bec1f6112.htm">BanUser(Jid, Jid, String, IqCB, Object)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3ba67b3d-57fb-bf15-b173-20c9b24e56ca.htm">ChangeNickname(Jid, String)</a></td><td><div class="summary">
            Change the Nickname in a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0e90a0b3-a9b1-33ac-a932-e4b72c0ea7f9.htm">ChangeSubject(Jid, String)</a></td><td><div class="summary">
            Change the subject of a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1b896665-4529-4904-831a-2f7fb73098a9.htm">ChangeSubject(Jid, String, String)</a></td><td><div class="summary">
            Change the subject of a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8c6cb76f-5f05-df04-bad9-1624cbbb5389.htm">CreateReservedRoom(Jid)</a></td><td><div class="summary">
            Creates a reserved room. The MUC server replies to this request either with an error if the room already exists 
            or another error occured. Or with the configuration for, for the reserved room which you have submit in the
            second step
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a5504fe9-62b4-02b8-52a8-2967155f797d.htm">CreateReservedRoom(Jid, IqCB)</a></td><td><div class="summary">
        <p>
            Creates a reserved room. The MUC server replies to this request either with an error if the room already exists 
            or another error occured. Or with the configuration for, for the reserved room which you have submit in the
            second step.
            </p>
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5776d4fe-c13f-b99a-04ea-2c5de6c24d5a.htm">CreateReservedRoom(Jid, IqCB, Object)</a></td><td><div class="summary">
        <p>
            Creates a reserved room. The MUC server replies to this request either with an error if the room already exists 
            or another error occured. Or with the configuration for, for the reserved room which you have submit in the
            second step.
            </p>
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f8ce60e4-7026-fbc4-0c94-7a9731540be9.htm">Decline(Jid, Jid)</a></td><td><div class="summary">
            Decline a groupchat invitation
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1076c3ec-a91d-bcbd-a778-555ef7a5ec90.htm">Decline(Jid, Jid, String)</a></td><td><div class="summary">
            Decline a groupchat invitation
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e0a732e5-38db-5da2-6a85-85c30dc96612.htm">DestroyRoom(Jid, Jid)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fdbd14b0-be7d-2d33-2270-57c648976d4e.htm">DestroyRoom(Jid, Jid, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="01603bb0-fe69-ba72-5fa3-f85dee862e2c.htm">DestroyRoom(Jid, Jid, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="dd5ca7f0-3efd-eee8-9415-1aea7268bff5.htm">DestroyRoom(Jid, String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="52380f23-f543-435f-bb0d-7af7f557495b.htm">DestroyRoom(Jid, String, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="558ef267-47fa-edcf-f62e-68632410c9ba.htm">DestroyRoom(Jid, String, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="405b1d0b-edae-e9f7-0657-85e9cbc7dc22.htm">DestroyRoom(Jid, Jid, String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1f1ef3ef-d7f8-117d-46f2-6b1d05696e2b.htm">DestroyRoom(Jid, Jid, String, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c960a4d0-624b-47f4-0a48-cf08bf9e2690.htm">DestroyRoom(Jid, Jid, String, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Allows an <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> to attempt to free resources and perform other cleanup operations before the <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. <a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a> is suitable for use in hashing algorithms and data structures like a hash table.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="69dbdc5e-4e25-3042-9e72-cfe3d99375d8.htm">GrantAdminPrivileges(Jid, Jid)</a></td><td><div class="summary">
            Grant administrative privileges to a member or unaffiliated user.
            This could be done by an room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5eefe533-99c1-765e-d361-6cbfc2b4401e.htm">GrantAdminPrivileges(Jid, Jid, IqCB)</a></td><td><div class="summary">
            Grant administrative privileges to a member or unaffiliated user.
            This could be done by an room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e1ce80fc-cab8-b625-c430-5d685e9125e5.htm">GrantAdminPrivileges(Jid, Jid, IqCB, Object)</a></td><td><div class="summary">
            Grant administrative privileges to a member or unaffiliated user.
            This could be done by an room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4b929221-6179-073d-58e7-8f5bfd2de4dc.htm">GrantMembership(Jid, Jid)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1fb37475-cfd6-828f-e5b4-72efe7cd3748.htm">GrantMembership(Jid, Jid, String)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b7d26c4c-6257-b3b0-355d-8c2785678232.htm">GrantMembership(Jid, Jid, String, IqCB)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ee446080-9f7f-5ce3-055c-d37994a9fe98.htm">GrantMembership(Jid, Jid, String, IqCB, Object)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="10c51bdc-d9a0-b334-d48b-421a22f94b3c.htm">GrantMembership(Jid, String)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6e2bba81-2bab-398f-c37c-1614fdcc92eb.htm">GrantMembership(Jid, String, String)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1bc63f4b-34a2-9b91-fc74-514cf07b3e83.htm">GrantMembership(Jid, String, String, IqCB)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f532d0bf-7217-0eab-2675-456ba04fa2b7.htm">GrantMembership(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
            An admin can grant membership to a user; 
            this is done by changing the user's affiliation to "member" 
            (normally based on nick if the user is in the room, or on bare JID if not; 
            in either case, if the nick is provided, that nick becomes the user's default nick in the room
            if that functionality is supported by the implementation)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3c81f6a7-bc9d-6172-f222-12d7f342de72.htm">GrantModeratorPrivileges(Jid, String)</a></td><td><div class="summary">
            An admin may want to grant moderator privileges to a participant or visitor
            this is done by changing the user's role to "moderator"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b72152f6-9ee4-4cfe-10d5-fff59617c09c.htm">GrantModeratorPrivileges(Jid, String, String)</a></td><td><div class="summary">
            An admin may want to grant moderator privileges to a participant or visitor
            this is done by changing the user's role to "moderator"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b80496b4-2357-ce60-e25e-5d594be6e3c3.htm">GrantModeratorPrivileges(Jid, String, String, IqCB)</a></td><td><div class="summary">
            An admin may want to grant moderator privileges to a participant or visitor
            this is done by changing the user's role to "moderator"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5543a0ae-4ac3-3d30-dd09-8a8a3af17407.htm">GrantModeratorPrivileges(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
            An admin may want to grant moderator privileges to a participant or visitor
            this is done by changing the user's role to "moderator"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f8b3e0ba-aa0f-7476-8c6e-3e98769874c2.htm">GrantOwnershipPrivileges(Jid, Jid)</a></td><td><div class="summary">
            If allowed by an implementation, an owner MAY grant ownership privileges to another user.        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5a7ba3e9-b173-4870-13c3-6af9ed778f47.htm">GrantOwnershipPrivileges(Jid, Jid, IqCB)</a></td><td><div class="summary">
            If allowed by an implementation, an owner MAY grant ownership privileges to another user.        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0fc08022-fd71-1840-cad9-6006a823a123.htm">GrantOwnershipPrivileges(Jid, Jid, IqCB, Object)</a></td><td><div class="summary">
            If allowed by an implementation, an owner MAY grant ownership privileges to another user.        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="41d5f451-a393-0949-18cf-9392cd6d7d72.htm">GrantVoice(Jid, String)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="835e3f87-aa09-3bac-9792-3e99839096bf.htm">GrantVoice(Jid, String, String)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="51c5c1f9-efab-ed86-cdb3-96f46daf55f5.htm">GrantVoice(Jid, String, String, IqCB)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d658270a-5f7e-aab4-2783-aa9055c72804.htm">GrantVoice(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="63ecabbf-4a5f-7779-fe08-5e3c74101039.htm">Invite(Jid, Jid)</a></td><td><div class="summary">
            Invite a contact to join a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ae677343-566d-df49-f72c-6216855d943b.htm">Invite(Jid, Jid, String)</a></td><td><div class="summary">
            Invite a contact to join a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="02351802-c897-2315-ac4d-3703a0c608df.htm">Invite(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Jid<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Jid, String)</a></td><td><div class="summary">
            Invite multiple contacts to a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7f1bce89-d151-b9b7-ae3f-a35c8976112a.htm">JoinRoom(Jid, String)</a></td><td><div class="summary">
            Join a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="972c8a70-217a-2487-f2ab-5b80bb0f588a.htm">JoinRoom(Jid, String, Boolean)</a></td><td><div class="summary">
            Join a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f478217a-cfa6-2b1e-51b8-e25b746c0a79.htm">JoinRoom(Jid, String, String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c8cba4bf-72e9-c0c4-d50e-353de0d10570.htm">JoinRoom(Jid, String, String, Boolean)</a></td><td><div class="summary">
            Join a chatroom
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b45de3c1-6778-9392-61e3-344e52350ace.htm">KickOccupant(Jid, String)</a></td><td><div class="summary">
            Kick a accupant
            A moderator has permissions kick a visitor or participant from a room.
            The kick is normally performed based on the occupant's room nickname (though it MAY be based on the full JID)
            and is completed by setting the role of a participant or visitor to a value of "none".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eb8bf08b-f763-301d-803b-91a9c7989699.htm">KickOccupant(Jid, String, String)</a></td><td><div class="summary">
            Kick a accupant
            A moderator has permissions kick a visitor or participant from a room.
            The kick is normally performed based on the occupant's room nickname (though it MAY be based on the full JID)
            and is completed by setting the role of a participant or visitor to a value of "none".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="38a82a2b-992b-7513-5685-a96b225cfdb2.htm">KickOccupant(Jid, String, String, IqCB)</a></td><td><div class="summary">
            Kick a accupant
            A moderator has permissions kick a visitor or participant from a room.
            The kick is normally performed based on the occupant's room nickname (though it MAY be based on the full JID)
            and is completed by setting the role of a participant or visitor to a value of "none".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6a119e37-6a4d-0320-9910-febf6f92b529.htm">KickOccupant(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
            Kick a accupant
            A moderator has permissions kick a visitor or participant from a room.
            The kick is normally performed based on the occupant's room nickname (though it MAY be based on the full JID)
            and is completed by setting the role of a participant or visitor to a value of "none".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="232a5cb7-11c8-a58b-fb9e-98d39df11be0.htm">LeaveRoom(Jid, String)</a></td><td><div class="summary">
            Leave a conference room
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="28276683-b47d-ee33-b9c4-7669637a134a.htm">ModifyList(Jid, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Item<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4258f1e7-6919-b597-44ad-07efec24fb3d.htm">ModifyList(Jid, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Item<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1dacc409-db4b-16c2-ab87-c6f82828fbe9.htm">ModifyList(Jid, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Item<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ba99314f-fd5f-c8b6-c7c7-1069e34f5a61.htm">RequestAdminList(Jid)</a></td><td><div class="summary">
            Request the list of admins. This could be done by the room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="21e6c514-33ce-4f07-7fe6-4af9ba112d3a.htm">RequestAdminList(Jid, IqCB)</a></td><td><div class="summary">
            Request the list of admins. This could be done by the room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="81ecc21a-e64f-ab32-4663-fbacb5d7215e.htm">RequestAdminList(Jid, IqCB, Object)</a></td><td><div class="summary">
            Request the list of admins. This could be done by the room owner
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7c649c46-be02-008a-db98-be2f32bcb86e.htm">RequestBanList(Jid)</a></td><td><div class="summary">
            A room admin may want to modify the ban list. 
            <div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent">
            Note: The ban list is always based on a user's bare JID, 
            although a nick (perhaps the last room nickname associated with that JID) MAY be included for convenience. 
            To modify the list of banned JIDs, the admin first requests the ban list by querying the room for all 
            users with an affiliation of 'outcast'.
            </div></div></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4daca5bf-dc88-ecb1-26af-0cc4a80f37dd.htm">RequestBanList(Jid, IqCB)</a></td><td><div class="summary">
            A room admin may want to modify the ban list. 
            <div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent">
            Note: The ban list is always based on a user's bare JID, 
            although a nick (perhaps the last room nickname associated with that JID) MAY be included for convenience. 
            To modify the list of banned JIDs, the admin first requests the ban list by querying the room for all 
            users with an affiliation of 'outcast'.
            </div></div></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="289005f7-32be-9ec2-a964-8ac2077b43a4.htm">RequestBanList(Jid, IqCB, Object)</a></td><td><div class="summary">
            A room admin may want to modify the ban list. 
            <div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent">
            Note: The ban list is always based on a user's bare JID, 
            although a nick (perhaps the last room nickname associated with that JID) MAY be included for convenience. 
            To modify the list of banned JIDs, the admin first requests the ban list by querying the room for all 
            users with an affiliation of 'outcast'.
            </div></div></div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="49026660-d605-6790-5647-edd396373f67.htm">RequestConfigurationForm(Jid)</a></td><td><div class="summary">
            Request the configuration form of a chatroom.
            You can request the from when creating a new room. or at any time later if you want to change the room configuration.
            Only room owners can request this from. Otherwise the service must return a 403 forbidden error
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e0569667-1ea1-cf14-ad49-b5ca4b99f033.htm">RequestConfigurationForm(Jid, IqCB)</a></td><td><div class="summary">
            Request the configuration form of a chatroom.
            You can request the from when creating a new room. or at any time later if you want to change the room configuration.
            Only room owners can request this from. Otherwise the service must return a 403 forbidden error
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c8392310-7735-bbe7-9f15-aa903e7723fc.htm">RequestConfigurationForm(Jid, IqCB, Object)</a></td><td><div class="summary">
            Request the configuration form of a chatroom.
            You can request the from when creating a new room. or at any time later if you want to change the room configuration.
            Only room owners can request this from. Otherwise the service must return a 403 forbidden error
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c1e5ade0-2da2-12c9-5fef-9a561cc3082a.htm">RequestList(Affiliation, Jid, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eb061428-67bc-3e38-de64-d20441ffe102.htm">RequestList(Role, Jid, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="73863189-e127-228f-a1ad-5b48b6637ac0.htm">RequestMemberList(Jid)</a></td><td><div class="summary">
            In the context of a members-only room, the member list is essentially a "whitelist" of people 
            who are allowed to enter the room. Anyone who is not a member is effectively banned from entering the room, 
            even if their affiliation is not "outcast".
            In the context of an open room, the member list is simply a list of users (bare JID and reserved nick) 
            who are registered with the room. Such users may appear in a room roster, have their room nickname reserved, 
            be returned in search results or FAQ queries, and the like.
            It is RECOMMENDED that only room admins have the privilege to modify the member list in members-only rooms. 
            To do so, the admin first requests the member list by querying the room for all users with an affiliation of "member"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d071e035-704c-1c72-60bb-76de36c5d94c.htm">RequestMemberList(Jid, IqCB)</a></td><td><div class="summary">
            In the context of a members-only room, the member list is essentially a "whitelist" of people 
            who are allowed to enter the room. Anyone who is not a member is effectively banned from entering the room, 
            even if their affiliation is not "outcast".
            In the context of an open room, the member list is simply a list of users (bare JID and reserved nick) 
            who are registered with the room. Such users may appear in a room roster, have their room nickname reserved, 
            be returned in search results or FAQ queries, and the like.
            It is RECOMMENDED that only room admins have the privilege to modify the member list in members-only rooms. 
            To do so, the admin first requests the member list by querying the room for all users with an affiliation of "member"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ffcf8d18-e977-3c36-dcda-701c04b55c82.htm">RequestMemberList(Jid, IqCB, Object)</a></td><td><div class="summary">
            In the context of a members-only room, the member list is essentially a "whitelist" of people 
            who are allowed to enter the room. Anyone who is not a member is effectively banned from entering the room, 
            even if their affiliation is not "outcast".
            In the context of an open room, the member list is simply a list of users (bare JID and reserved nick) 
            who are registered with the room. Such users may appear in a room roster, have their room nickname reserved, 
            be returned in search results or FAQ queries, and the like.
            It is RECOMMENDED that only room admins have the privilege to modify the member list in members-only rooms. 
            To do so, the admin first requests the member list by querying the room for all users with an affiliation of "member"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f4f5ecbf-bfd5-f461-8b75-8a84fdc753dc.htm">RequestModeratorList(Jid)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5fb74646-5002-3786-bddd-9f44a603fdd0.htm">RequestModeratorList(Jid, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c20f9730-08b5-b411-ce63-cd6b174f8829.htm">RequestModeratorList(Jid, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9de94e4d-d6b1-5e84-8500-df3e11ab88cd.htm">RequestOwnerList(Jid)</a></td><td><div class="summary">
            Request the owner list of a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="05b20efb-b514-d297-85a8-8359df9cde2a.htm">RequestOwnerList(Jid, IqCB)</a></td><td><div class="summary">
            Request the owner list of a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="03921266-1d49-66bb-4290-1b3775f5b4ff.htm">RequestOwnerList(Jid, IqCB, Object)</a></td><td><div class="summary">
            Request the owner list of a room
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9a99871f-8573-cc05-149c-eb403b107280.htm">RequestVoiceList(Jid)</a></td><td><div class="summary">
            A moderator in a moderated room may want to modify the voice list. 
            To do so, the moderator first requests the voice list by querying the room for all occupants 
            with a role of 'participant'.
            The service MUST then return the voice list to the moderator; each item MUST include 
            the 'nick' and 'role' attributes and SHOULD include the 'affiliation' and 'jid' attributes.
            The moderator MAY then modify the voice list. In order to do so, the moderator MUST send the 
            changed items (i.e., only the "delta") back to the service; each item MUST include 
            the 'nick' attribute and 'role' attribute (normally set to a value of "participant" or "visitor") 
            but SHOULD NOT include the 'jid' attribute and MUST NOT include the 'affiliation' attribute 
            (which is used to manage affiliations such as owner rather than the participant role),
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5d74c520-17dc-2c03-b2da-8d33a6e071e4.htm">RequestVoiceList(Jid, IqCB)</a></td><td><div class="summary">
            A moderator in a moderated room may want to modify the voice list. 
            To do so, the moderator first requests the voice list by querying the room for all occupants 
            with a role of 'participant'.
            The service MUST then return the voice list to the moderator; each item MUST include 
            the 'nick' and 'role' attributes and SHOULD include the 'affiliation' and 'jid' attributes.
            The moderator MAY then modify the voice list. In order to do so, the moderator MUST send the 
            changed items (i.e., only the "delta") back to the service; each item MUST include 
            the 'nick' attribute and 'role' attribute (normally set to a value of "participant" or "visitor") 
            but SHOULD NOT include the 'jid' attribute and MUST NOT include the 'affiliation' attribute 
            (which is used to manage affiliations such as owner rather than the participant role),        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5cc97ca6-e8b8-0b19-82bb-2554efc968d9.htm">RequestVoiceList(Jid, IqCB, Object)</a></td><td><div class="summary">
            A moderator in a moderated room may want to modify the voice list. 
            To do so, the moderator first requests the voice list by querying the room for all occupants 
            with a role of 'participant'.
            The service MUST then return the voice list to the moderator; each item MUST include 
            the 'nick' and 'role' attributes and SHOULD include the 'affiliation' and 'jid' attributes.
            The moderator MAY then modify the voice list. In order to do so, the moderator MUST send the 
            changed items (i.e., only the "delta") back to the service; each item MUST include 
            the 'nick' attribute and 'role' attribute (normally set to a value of "participant" or "visitor") 
            but SHOULD NOT include the 'jid' attribute and MUST NOT include the 'affiliation' attribute 
            (which is used to manage affiliations such as owner rather than the participant role),        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="424fd368-d4a0-8b60-2f1a-192711067097.htm">RevokeMembership(Jid, String)</a></td><td><div class="summary">
            An admin may want to revoke a user's membership
            this is done by changing the user's affiliation to "none"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="254061ca-2eca-d017-29f4-6cf65babf86d.htm">RevokeMembership(Jid, String, String)</a></td><td><div class="summary">
            An admin may want to revoke a user's membership
            this is done by changing the user's affiliation to "none"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9b43fa3c-2011-6f4c-6571-1bbbad47a558.htm">RevokeMembership(Jid, String, String, IqCB)</a></td><td><div class="summary">
            An admin may want to revoke a user's membership
            this is done by changing the user's affiliation to "none"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3546baa4-4203-9038-5e47-9f0ff659703f.htm">RevokeMembership(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
            An admin may want to revoke a user's membership
            this is done by changing the user's affiliation to "none"
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2189bfd8-b31d-a8bf-6560-b57f21af3875.htm">RevokeModerator(Jid, String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2e9c0dad-aa5e-5cdf-07af-807497dcc850.htm">RevokeModerator(Jid, String, String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f1e87abd-668d-4ee5-d545-8922a7d3179e.htm">RevokeModerator(Jid, String, String, IqCB)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f01dda17-3eea-0197-ac35-cab74a974ff4.htm">RevokeModerator(Jid, String, String, IqCB, Object)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fb6ec525-4ba9-b347-e59e-c51ebf4eb4d1.htm">RevokeVoice(Jid, String)</a></td><td><div class="summary">
            In a moderated room, a moderator may want to revoke a participant's privileges to speak.
            The moderator can revoke voice from a participant by changing the participant's role to "visitor":
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="44ce8fa9-9e67-eb77-7c13-9e0e47299c9a.htm">RevokeVoice(Jid, String, String)</a></td><td><div class="summary">
            In a moderated room, a moderator may want to revoke a participant's privileges to speak.
            The moderator can revoke voice from a participant by changing the participant's role to "visitor":
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="06c047a2-259b-d23b-16cf-1f926a4c7f99.htm">RevokeVoice(Jid, String, String, IqCB)</a></td><td><div class="summary">
            In a moderated room, a moderator may want to revoke a participant's privileges to speak.
            The moderator can revoke voice from a participant by changing the participant's role to "visitor":
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e9c42ad9-1a0b-42ed-a6e8-2722e673b486.htm">RevokeVoice(Jid, String, String, IqCB, Object)</a></td><td><div class="summary">
            In a moderated room, a moderator may want to revoke a participant's privileges to speak.
            The moderator can revoke voice from a participant by changing the participant's role to "visitor":
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr></table><script type="text/javascript">
					var mt = new ElementCollection('memberTabs');
					var ms = new ElementCollection('memberList');
					var mf = new MemberFilter();
					mt.toggleClass('value','all','activeTab','tab');
				</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">MucManager</span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:gnauck%40ag-software.de?Subject=agsXMPP SDK">gnauck@ag-software.de</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p /><a href="http://www.ag-software.de">Copyright (c) 2003-2008 by AG-Software</a></div>Assembly: <span data="assembly">agsXMPP</span> (Module: agsXMPP) Version: 1.1.0.0</p></div></body></html>